// Mocks generated by Mockito 5.4.4 from annotations
// in weather_forecast_app/test/app/modules/home/presentation/stores/weather_store_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:fpdart/fpdart.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:weather_forecast_app/app/core/errors/failures.dart' as _i5;
import 'package:weather_forecast_app/app/core/models/location/location_model.dart'
    as _i7;
import 'package:weather_forecast_app/app/core/models/position/position_model.dart'
    as _i6;
import 'package:weather_forecast_app/app/core/models/weather_forecast/weather_forecast_model.dart'
    as _i9;
import 'package:weather_forecast_app/app/modules/home/infra/repositories/fetch_weather_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FetchWeatherRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchWeatherRepository extends _i1.Mock
    implements _i2.FetchWeatherRepository {
  MockFetchWeatherRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Either<_i5.Failure, _i6.PositionModel>>
      fetchPositionFromLocation(_i7.LocationModel? location) =>
          (super.noSuchMethod(
            Invocation.method(
              #fetchPositionFromLocation,
              [location],
            ),
            returnValue:
                _i3.Future<_i4.Either<_i5.Failure, _i6.PositionModel>>.value(
                    _i8.dummyValue<_i4.Either<_i5.Failure, _i6.PositionModel>>(
              this,
              Invocation.method(
                #fetchPositionFromLocation,
                [location],
              ),
            )),
          ) as _i3.Future<_i4.Either<_i5.Failure, _i6.PositionModel>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, _i9.WeatherForecastModel>> fetchWeather(
          _i7.LocationModel? location) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchWeather,
          [location],
        ),
        returnValue: _i3
            .Future<_i4.Either<_i5.Failure, _i9.WeatherForecastModel>>.value(
            _i8.dummyValue<_i4.Either<_i5.Failure, _i9.WeatherForecastModel>>(
          this,
          Invocation.method(
            #fetchWeather,
            [location],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure, _i9.WeatherForecastModel>>);
}
